---
- name: Playbook to add or remove sudo access for a user
  hosts: "{{ hostlist | default('all') }}"
  become: True
  vars:
    username: ""
    require_password: true
    operation: remove

  tasks:
    - name: Verify username is not empty
      ansible.builtin.assert:
        that:
          - username != ""
        fail_msg: "'username' must be defined"

    - name: Block for adding a user
      block:

        - name: Debug message when adding a user - password required
          ansible.builtin.debug:
            msg: "Adding user {{ username }} that will require their password to be entered"
#            verbosity: 1
          when: require_password

        - name: Create drop in user file in sudoers.d that requires a password
          ansible.builtin.copy:
            content: "{{ username }}        ALL=(ALL)"
            dest: "/etc/sudoers.d/{{ username }}"
          when: require_password

        - name: Debug message when adding a user - no password required
          ansible.builtin.debug:
            msg: "Adding user {{ username }} that will not require their password to be entered"
#            verbosity: 1
          when: not require_password

        - name: Create drop in user file in sudoers.d that requires a password
          ansible.builtin.copy:
            content: "{{ username }}        ALL=(ALL)       NOPASSWD: ALL"
            dest: "/etc/sudoers.d/{{ username }}"
          when: not require_password

      when: operation == "add"

    - name: Block for removing a user
      block:

        - name: Debug message when removing a user
          ansible.builtin.debug:
            msg: "Removing user {{ username }}"

        - name: Ensure the file is removed
          ansible.builtin.file:
             path: "/etc/sudoers.d/{{ username }}"
             state: absent

      when: operation == "remove"
